---
- name: Gather distribution facts
  when:
    - ansible_distribution is not defined or
      ansible_distribution_major_version is not defined or
      ansible_distribution_version is not defined or
      ansible_os_family is not defined
  ansible.builtin.setup:
    gather_subset:
      - '!all'
      - '!min'
      - distribution
      - distribution_major_version
      - distribution_version
      - os_family

- name: Include OS specific variables
  ansible.builtin.include_vars: "{{ _file }}"
  vars:
    _file: "{{ lookup('first_found', _params) }}"
    _params:
      files:
        - "{{ ansible_distribution }}-{{ ansible_distribution_release | default('') }}.yml"
        - "{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"
        - "{{ ansible_distribution }}.yml"
        - "{{ ansible_os_family }}-{{ ansible_distribution_major_version }}.yml"
        - "{{ ansible_os_family }}.yml"
        - fallback.yml
      paths:
        - "{{ role_path }}/vars"

- name: Validate OS is supported
  ansible.builtin.assert:
    that:
      - _mssql_is_os_supported
    fail_msg: "{{ ansible_distribution }} {{ ansible_distribution_version }} is not supported."
    success_msg: "{{ ansible_distribution }} {{ ansible_distribution_version }} is from a supported OS family."

- name: Indicate OS is tested
  when:
    - _mssql_is_tested
  ansible.builtin.debug:
    msg: "{{ ansible_distribution }} {{ ansible_distribution_version }} has been tested with this role."

- name: Warn if OS is not tested
  when:
    - not _mssql_is_tested
  ansible.builtin.debug:
    msg: "WARNING: {{ ansible_distribution }} {{ ansible_distribution_version }} is not tested."
  changed_when: true

- name: Validate OS family variables
  ansible.builtin.include_tasks: validate/{{ ansible_os_family }}.yml

- name: Validate monitoring variables
  when:
    - mssql_configure_monitoring
  block:
    - name: Validate monitoring user is defined
      ansible.builtin.assert:
        that:
          - mssql_monitoring_user is defined
        fail_msg: "The 'mssql_monitoring_user' variable is not defined."
        success_msg: "The 'mssql_monitoring_user' variable is defined."

    - name: Validate monitoring password is defined
      when:
        - not mssql_vault_manage_monitoring_credentials
      ansible.builtin.assert:
        that:
          - mssql_monitoring_password is defined
        fail_msg: "The 'mssql_monitoring_password' variable is not defined."
        success_msg: "The 'mssql_monitoring_password' variable is defined."

- name: Validate Vault database variables
  when:
    - mssql_vault_configure_database_connection
  block:
    - name: Validate Vault database mount point is defined
      ansible.builtin.assert:
        that:
          - mssql_vault_database_mount_point is defined
        fail_msg: "The 'mssql_vault_database_mount_point' variable is not defined."
        success_msg: "The 'mssql_vault_database_mount_point' variable is defined."

    - name: Validate Vault database connection name is defined
      ansible.builtin.assert:
        that:
          - mssql_vault_database_connection_name is defined
        fail_msg: "The 'mssql_vault_database_connection_name' variable is not defined."
        success_msg: "The 'mssql_vault_database_connection_name' variable is defined."
